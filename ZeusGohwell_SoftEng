#include <iostream>
#include <string>
#include <vector>
#include <cctype>

using namespace std;

bool isValidSentence(const string& sentence) {
    // Checking if the sentence starts with a capital letter
    if (sentence.empty() || !isupper(sentence[0])) return false;

    // Checking for even number of quotation marks
    int quoteCount = 0;
    for (char ch : sentence) {
        if (ch == '"') quoteCount++;
    }
    if (quoteCount % 2 != 0) return false;

    // Checking if sentence ends with a ".", "?", or "!"
    char lastChar = sentence.back();
    if (lastChar != '.' && lastChar != '?' && lastChar != '!') return false;

    // Ensure no period characters other than the last character
    for (int i = 0; i < sentence.length() - 1; i++) {
        if (sentence[i] == '.') return false;
    }

    // Check if numbers below 13 are spelled out
    vector<string> numbersBelow13 = {"one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve"};
    for (const string& num : numbersBelow13) {
        if (sentence.find(num) != string::npos) return false;
    }

    // If all checks pass
    return true;
}

int main() {
    // Test cases
    vector<string> testSentences = {
        "The quick brown fox said “hello Mr lazy dog”.",
        "The quick brown fox said hello Mr lazy dog.",
        "One lazy dog is too few, 13 is too many.",
        "One lazy dog is too few, thirteen is too many.",
        "How many \"lazy dogs\" are there?",
        "The quick brown fox said \"hello Mr. lazy dog\".",
        "the quick brown fox said “hello Mr lazy dog\".",
        "\"The quick brown fox said “hello Mr lazy dog.\"",
        "One lazy dog is too few, 12 is too many.",
        "Are there 11, 12, or 13 lazy dogs?",
        "There is no punctuation in this sentence"
    };

    for (const string& sentence : testSentences) {
        cout << "Sentence: \"" << sentence << "\" is "
             << (isValidSentence(sentence) ? "valid" : "invalid") << endl;
    }

    return 0;
}
